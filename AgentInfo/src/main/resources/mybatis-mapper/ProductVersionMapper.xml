<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="productVersion">
	<resultMap type="com.secuve.agentInfo.vo.MenuSetting" id="menuSetting"></resultMap>
	
	
	<select id="getProductVersionNoneExist" resultType="_int">
		SELECT COUNT(*) FROM menuSetting 
		WHERE menuTitle = #{mainTitle} 
		AND menuType = 'main'
		<if test="subTitle != null and subTitle != ''">
			AND menuKeyNum = (SELECT menuParentKeyNum
							 FROM menuSetting
							 WHERE menuTitle = #{subTitle}
							 AND menuType = 'sub') 
		</if>
	</select>
	
	<update id="createItem">
		CREATE TABLE ${tableName} (
			productVersionKeyNum INT AUTO_INCREMENT PRIMARY KEY,
			${menuTitle} ${menuItemType}
		)
	</update>
	
	<update id="dropItem">
		DROP TABLE ${tableName};
	</update>
	
	<update id="alterItem">
		ALTER TABLE ${tableName} ADD COLUMN ${menuTitle} ${menuItemType};
	</update>
	
	<update id="alterDeleteItem">
		ALTER TABLE ${tableName} DROP COLUMN ${menuTitle};
	</update>
	
	<update id="alterUpdateItem">
		ALTER TABLE ${tableName} CHANGE ${oldTitle} ${menuTitle} ${menuItemType};
	</update>
	
	<select id="getProductVersionList" parameterType="map" resultType="map">
		SELECT *
    	FROM
    	(
    		SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) RowNo, a.*
    		FROM (
				SELECT *
				FROM ${productData}
				<include refid="sqlProductVersion" />
			) a
		) b
    	WHERE b.RowNo between (1+(${page} - 1 ) * ${rows}) and (${page} * ${rows});
	</select>
	
	<select id="getProductVersionListCount" parameterType="map" resultType="_int">
		SELECT COUNT(*) FROM ${productData}
		<include refid="sqlProductVersion" />;
	</select>
	
	<insert id="insertProductVersion" parameterType="map">
		INSERT INTO ${tableName}
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<foreach collection="columnMap.keySet()" item="col">
      			${col},
    		</foreach>
  		</trim>
  		VALUES
  		<trim prefix="(" suffix=")" suffixOverrides=",">
    		<foreach collection="columnMap.keySet()" item="col">
      			#{columnMap[${col}]},
    		</foreach>
  		</trim>
	</insert>
	
	<delete id="delProductVersion" parameterType="map">
		DELETE FROM ${tableName} WHERE productVersionKeyNum = ${productVersionKeyNum};
	</delete>
	
	<update id="updateProductVersion" parameterType="map">
		UPDATE ProductVersion_${menuKeyNum}
		<set>
	        <foreach collection="columnMap.keySet()" item="col">
	            ${col} = #{columnMap[${col}]},
	        </foreach>
    	</set>
		WHERE productVersionKeyNum = ${productVersionKeyNum} 
	</update>
	
	
	<!-- ==================================================================================== -->
	
	<sql id="sqlProductVersion">
		<where>
			<foreach collection="conditions" item="cond">
				<if test="cond.value != null and cond.value != ''">
					AND ${cond.key} LIKE CONCAT('%',#{cond.value},'%')
				</if>
			</foreach>
		</where>
	</sql>
	
</mapper>