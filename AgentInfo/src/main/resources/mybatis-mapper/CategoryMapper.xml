<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="category">
	<resultMap type="com.secuve.agentInfo.vo.Category" id="category"></resultMap>
	<resultMap type="com.secuve.agentInfo.vo.CategoryBusiness" id="categoryBusiness"></resultMap>
	
	<select id="getCategoryValue" resultType="string" parameterType="string">
		SELECT categoryValue FROM category WHERE categoryName = #{categoryName};
	</select>
	
	<select id="getCategoryBusinessName" resultType="string">
		SELECT DISTINCT categoryValue FROM category c, customerBusinessMapping cb WHERE c.categoryName = #{categoryName} AND c.categoryValue = cb.businessName AND cb.customerName = #{customerName};
	</select>
	
	<select id="getCategoryList" resultMap="category" parameterType="string">
		SELECT *
    	FROM
    	(
    		SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) RowNo, a.*
    		FROM (
				SELECT *
				FROM category
				WHERE categoryName = #{categoryName}
				<if test="categoryValue != null and categoryValue != ''">
					AND(
						<trim prefix="" prefixOverrides="OR">
							<foreach collection="categoryValueArr" item="arr">
								OR categoryValue LIKE CONCAT('%',#{arr},'%')
							</foreach>
						</trim>
					)
				</if>
				<if test="customerId != null and customerId != ''">
					AND(
						<trim prefix="" prefixOverrides="OR">
							<foreach collection="customerIdArr" item="arr">
								OR categorykeyNum = #{arr}
							</foreach>
						</trim>
					)
				</if>
			) a
		) b
    	WHERE b.RowNo between (1+(${page} - 1 ) * ${rows}) and (${page} * ${rows});
	</select>
	
	<select id="getCategoryListCount" parameterType="string" resultType="_int">
		SELECT COUNT(*) FROM category
		WHERE categoryName = #{categoryName}
		<if test="categoryValue != null and categoryValue != ''">
			AND(
				<trim prefix="" prefixOverrides="OR">
					<foreach collection="categoryValueArr" item="arr">
						OR categoryValue LIKE CONCAT('%',#{arr},'%')
					</foreach>
				</trim>
			)
		</if>
		<if test="customerId != null and customerId != ''">
			AND(
				<trim prefix="" prefixOverrides="OR">
					<foreach collection="customerIdArr" item="arr">
						OR categorykeyNum = #{arr}
					</foreach>
				</trim>
			)
		</if>
	</select>
	
	<delete id="delCategory" parameterType="_int">
		DELETE FROM category WHERE categoryKeyNum = #{categoryKeyNum};
	</delete>
	
	<insert id="insertCategory">
		INSERT INTO category(categoryName, categoryValue, categoryRegistrant, categoryRegistrationDate)
		VALUES (#{categoryName}, #{categoryValueView}, #{categoryRegistrant}, #{categoryRegistrationDate});
	</insert>
	
	<select id="getCategoryOne" parameterType="_int" resultMap="category">
		SELECT * FROM category WHERE categoryKeyNum = #{categoryKeyNum};	
	</select>
	
	<update id="updateCategory">
		UPDATE category SET categoryValue = #{categoryValueView}, categoryModifier = #{categoryModifier}, categoryModifiedDate = #{categoryModifiedDate}
		WHERE categoryKeyNum = #{categoryKeyNum};
	</update>
	
	<select id="getCategoryCheck" parameterType="string" resultMap="category">
		SELECT * FROM category WHERE categoryName = #{categoryName} AND categoryValue = #{categoryValueView};
	</select>
	
	<select id="getCategoryManagementServer" resultType="_int">
		SELECT COUNT(*) FROM category WHERE categoryName = #{categoryName} AND categoryValue = #{categoryValue};
	</select>
	
	<select id="getSelectInput" resultType="string" parameterType="string">
		SELECT DISTINCT categoryValue FROM category WHERE categoryValue != '' AND categoryName = #{selectInput};
	</select>
	
	<select id="getCategoryBusinessList" resultMap="categoryBusiness" parameterType="string">
		SELECT *
    	FROM
    	(
    		SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) RowNo, a.*
    		FROM (
				SELECT *
				FROM categoryBusiness
				<trim prefix="WHERE" prefixOverrides="AND|OR">
					<if test="categoryCustomerName != null and categoryCustomerName != ''">
						AND(
							<trim prefix="" prefixOverrides="OR">
								<foreach collection="categoryCustomerNameArr" item="arr">
									OR categoryCustomerName LIKE CONCAT('%',#{arr},'%')
								</foreach>
							</trim>
						)
					</if>
					<if test="categoryBusinessName != null and categoryBusinessName != ''">
						AND(
							<trim prefix="" prefixOverrides="OR">
								<foreach collection="categoryBusinessNameArr" item="arr">
									OR categoryBusinessName LIKE CONCAT('%',#{arr},'%')
								</foreach>
							</trim>
						)
					</if>
				</trim>
			) a
		) b
    	WHERE b.RowNo between (1+(${page} - 1 ) * ${rows}) and (${page} * ${rows});
	</select>
	
	<select id="getCategoryBusinessListCount" resultType="_int" parameterType="string">
		SELECT COUNT(*)
		FROM categoryBusiness
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="categoryCustomerName != null and categoryCustomerName != ''">
				AND(
					<trim prefix="" prefixOverrides="OR">
						<foreach collection="categoryCustomerNameArr" item="arr">
							OR categoryCustomerName LIKE CONCAT('%',#{arr},'%')
						</foreach>
					</trim>
				)
			</if>
			<if test="categoryBusinessName != null and categoryBusinessName != ''">
				AND(
					<trim prefix="" prefixOverrides="OR">
						<foreach collection="categoryBusinessNameArr" item="arr">
							OR categoryBusinessName LIKE CONCAT('%',#{arr},'%')
						</foreach>
					</trim>
				)
			</if>
		</trim>
	</select>
	
	<select id="existenceBusinessCheck" resultType="string" parameterType="string">
		SELECT categoryBusinessName FROM categoryBusiness WHERE categoryCustomerName = #{categoryCustomerNameView};
	</select>
	
	<select id="getCategoryBusinessCheck" parameterType="string" resultMap="categoryBusiness">
		SELECT * FROM categoryBusiness WHERE categoryCustomerName = #{categoryCustomerNameView} AND categoryBusinessName = #{categoryBusinessNameView};
	</select>
	
	<insert id="insertCategoryBusiness">
		INSERT INTO categoryBusiness(categoryCustomerName, categoryBusinessName, categoryBusinessRegistrant, categoryBusinessRegistrationDate)
		VALUES(#{categoryCustomerNameView}, #{categoryBusinessNameView}, #{categoryBusinessRegistrant}, #{categoryBusinessRegistrationDate});
	</insert>
	
	<update id="updateCategoryBusiness">
		UPDATE categoryBusiness SET categoryCustomerName=#{categoryCustomerNameView}, categoryBusinessName=#{categoryBusinessNameView}, categoryBusinessModifier=#{categoryBusinessModifier}, categoryBusinessModifiedDate=#{categoryBusinessModifiedDate}
		WHERE categoryBusinessKeyNum = #{categoryBusinessKeyNum};
	</update>
	
	<select id="getCategoryBusinessOne" parameterType="_int" resultMap="categoryBusiness">
		SELECT * FROM categoryBusiness WHERE categoryBusinessKeyNum = #{categoryBusinessKeyNum};
	</select>
	
	<delete id="delCategoryBusiness">
		DELETE FROM categoryBusiness WHERE categoryBusinessKeyNum = #{categoryBusinessKeyNum};
	</delete>
	
	<select id="getCategoryBusinessNameList" resultType="string">
		SELECT DISTINCT categoryBusinessName FROM categoryBusiness;
	</select>
	
	<select id="getCategoryCustomerBusinessName" resultType="string">
		SELECT categoryBusinessName FROM categoryBusiness  WHERE categoryCustomerName = #{customerName}; 
	</select>
	
	<select id="checkCustomerBusinessMapping" resultType="_int" parameterType="string">
		SELECT COUNT(*) FROM categoryBusiness  WHERE categoryCustomerName = #{categoryCustomerNameView} AND categoryBusinessName = #{categoryBusinessNameView}
	</select>
	
	<select id="getCategoryBusinessValue" parameterType="string" resultType="string">
		SELECT categoryBusinessName FROM categoryBusiness WHERE categoryCustomerName = #{customerName};
	</select>
	
	<select id="getCategoryKeyNum" resultType="_int">
		SELECT categoryKeyNum FROM category WHERE categoryName = 'customerName';
	</select> 
</mapper>