<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="questionAnswer">
	<resultMap type="com.secuve.agentInfo.vo.Question" id="question"></resultMap>
	<resultMap type="com.secuve.agentInfo.vo.Answer" id="answer"></resultMap>
	
	<select id="getQuestionAnswerList" resultMap="question" parameterType="string">
		SELECT *
    	FROM
    	(
    		SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) RowNo, a.*
    		FROM (
				SELECT q.*, e.employeeName
				FROM question q, Employee e
				WHERE q.employeeId = e.employeeId
				ORDER BY questionCount DESC
			) a
		) b
    	WHERE b.RowNo between (1+(${page} - 1 ) * ${rows}) and (${page} * ${rows});
	</select>
	
	<select id="getQuestionAnswerListCount" resultType="_int">
		SELECT COUNT(*) FROM question q, Employee e WHERE q.employeeId = e.employeeId;
	</select>
	
	<insert id="insertQuestion">
		INSERT INTO question(questionTitle, questionDetail, employeeId, questionDate, questionCount, questionState, questionRegistrant, questionRegistrationDate)
		VALUES(#{questionTitle}, #{questionDetail}, #{employeeId}, #{questionDate}, 0, '답변 대기', #{questionRegistrant}, #{questionRegistrationDate});
	</insert>
	
	<select id="getQuestionOne" parameterType="_int" resultMap="question">
		SELECT * FROM question q, Employee e WHERE q.employeeId = e.employeeId AND questionKeyNum = #{questionKeyNum};
	</select>
	
	<update id="questionAnswerCountPlus" parameterType="_int">
		UPDATE question SET questionCount = questionCount + 1 WHERE questionKeyNum = #{questionKeyNum};
	</update>
	
	<insert id="insertAnswer">
		INSERT INTO answer(questionKeyNum, answerDetail, answerDate, employeeId, answerRegistrant, answerRegistrationDate)
		VALUES(#{questionKeyNum}, #{answerDetail}, #{answerDate}, #{employeeId}, #{answerRegistrant}, #{answerRegistrationDate});
	</insert>
	
	<select id="getAnswerOne" parameterType="_int" resultMap="answer">
		SELECT * FROM answer a, Employee e WHERE a.employeeId = e.employeeId AND questionKeyNum = #{questionKeyNum};
	</select>
	
	<delete id="deleteAnswer">
		DELETE FROM answer WHERE questionKeyNum = #{questionKeyNum};
	</delete>
	
	<update id="updateQuestionState">
		UPDATE question SET questionState = '답변 완료' WHERE questionKeyNum = #{questionKeyNum};
	</update>
	
	<!-- ==================================================================================== -->
	
	<sql id="sqlQuestionAnswer">
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="customerName != null and customerName != ''">
				AND (
				<trim prefix="" prefixOverrides="OR">
					<foreach collection="customerNameArr" item="arr">
						OR customerName LIKE CONCAT('%',#{arr},'%')
					</foreach>
				</trim>
				)
			</if>
			<if test="businessName != null and businessName != ''">
				AND (
				<trim prefix="" prefixOverrides="OR">
					<foreach collection="businessNameArr" item="arr">
						OR businessName LIKE CONCAT('%',#{arr},'%')
					</foreach>
				</trim>
				)
			</if>
			<if test="managementServer != null and managementServer != ''">
				AND (
				<trim prefix="" prefixOverrides="OR">
					<foreach collection="managementServerArr" item="arr">
						OR managementServer LIKE CONCAT('%',#{arr},'%')
					</foreach>
				</trim>
				)
			</if>
			<if test="osType != null and osType != ''">
				AND (
				<trim prefix="" prefixOverrides="OR">
					<foreach collection="osTypeArr" item="arr">
						OR osType LIKE CONCAT('%',#{arr},'%')
					</foreach>
				</trim>
				)
			</if>
			<if test="agentVer != null and agentVer != ''">
				AND (
				<trim prefix="" prefixOverrides="OR">
					<foreach collection="agentVerArr" item="arr">
						OR agentVer LIKE CONCAT('%',#{arr},'%')
					</foreach>
				</trim>
				)
			</if>
		</trim>
	</sql>
</mapper>